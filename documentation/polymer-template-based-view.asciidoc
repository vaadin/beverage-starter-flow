---
title: polymer template based view
order: 2
layout: page
---
ifdef::env-github[:outfilesuffix: .asciidoc]
Polymer Template Based View
---------------------------
ReviewsList is a PolymerTemplate based view class. In this view, the list of reviews will be shown under a "search" field and "add a new review" button.

For more information about Polymer Template, you can find *https://github.com/vaadin/flow/blob/master/flow-documentation/polymer-templates/tutorial-template-basic.asciidoc[here^]*.The following contents will introduce some concepts which are used in ``ReviewsList.java`` and ``ReviewList.html`` file.

Data binding in PolymerTemplate
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In review list, every review is shown separately in the review list. In order to do this, PolymerTemplate provides a way to generate elements based on a list of items using template repeater, `dom-repeat`.

[source, html]
--------------
<template is="dom-repeat" items="{{reviews}}">
        <div class="flex-score">{{item.score}}</div>
        <div class="flex-name">{{item.name}}</div>
        <div class="flex-category">{{item.reviewCategory.categoryName}}</div>
        <div class="flex-times">{{item.testTimes}}</div>
        <div class="flex-date">{{item.testDate}}</div>
        <div class="flex-button">
        <vaadin-button on-click='edit'>Edit</vaadin-button>
        </div>
</template>
--------------

And on the Java code side, a method is declared in the template model interface for setting the list of items.

[source, java]
--------------
 public static interface ReviewsModel extends TemplateModel {
   //some preprocessing needs to be done beforehand
   void setReviews(List<Review> reviews);
}
--------------
[NOTE]
the name of the method should match the name in the `dom-repeat` definition, like the `reviews` in our case. 

Via using this way, we bind our data to the PolymerTemplate. For more about this content, you can find more *https://github.com/vaadin/flow/blob/master/flow-documentation/polymer-templates/tutorial-template-list-bindings.asciidoc[here^]*


Annotations
~~~~~~~~~~~
@Convert
^^^^^^^^
As I mentioned preprocessing, there are two data types (``LocalDate``,``Long``) in our case which are not supported in the PolymerTemplate model directly, so that we need to use ``@Convert`` annotation:
[source, java]
--------------
@Convert(value = LongToStringConverter.class, path = "id")
@Convert(value = LongToStringConverter.class, path = "reviewCategory.categoryId")
@Convert(value = LocalDateToStringConverter.class, path = "testDate")
--------------
More about *https://github.com/vaadin/flow/blob/master/flow-documentation/polymer-templates/tutorial-template-model-converters.asciidoc[Using Model Converters with a PolymerTemplate Model^]*

@Id
^^^

In our HTML template, we have a button and a textfield with corresponding identifiers.
[source, html]
--------------
<vaadin-text-field id='filterText'></vaadin-text-field>
<vaadin-button id='addReview'></vaadin-button>
--------------

Then the ``@Id`` annotation in java file maps the components to the elements in the `HTML template`.
[source, java]
--------------
@Id("filterText")
private TextField filterText;
@Id("addReview")
private Button addReview;
--------------
More about *https://github.com/vaadin/flow/blob/master/flow-documentation/polymer-templates/tutorial-template-components.asciidoc[Binding Components from a PolymerTemplate^]*

@EventHandler
^^^^^^^^^^^^^
As we can see from the preview of reviews list, at the end of each reviews, there is an edit button for users to edit the existed review. To handle the click event from each button, we need to create a separated method with the event name, annotated with `@EventHandler`.
[source, java]
--------------
@EventHandler
private void edit(@ModelItem Review review) {
   reviewForm.openReview(Optional.of(review));
}
--------------
More about *https://github.com/vaadin/flow/blob/master/flow-documentation/polymer-templates/tutorial-template-event-handlers.asciidoc#server-side-event-handlers[Handling Users Events in PolymerTemplate-Serverside^]*

